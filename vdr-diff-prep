#!/usr/bin/env ruby

require 'logger'
require File.expand_path('../lib/shell', __FILE__)

if ARGV.length < 2
  puts "Usage: #$0 VDR_FILE MDES_VERSION"
  exit 1
end

$stderr.puts "VDR transformation in progress"

logger = Logger.new($stderr)
shell = Shell.new(ARGV[0], ARGV[1], logger)

i = 0

# Generate a set of new node definitions that's amenable to textual diff.
#
# Given
#
#   <dwelling_unit>
#     <du_id>100</du_id>
#     <foo>bar</foo>
#     <qux>baz</qux>
#   </dwelling_unit>
#
# this process will produce
# 
#     dwelling_unit:100:du_id  100
#     dwelling_unit:100:foo  bar
#     dwelling_unit:100:qux  baz
shell.run do |node, ns|
  node.children.each do |c|
    if c.element?
      text = c.child.inspect

      if text
        # Newlines play badly with textual sort and diff, so escape them.
        text.gsub!("\n", "\\n")
        text.gsub!("\r", "\\r")
      end

      puts "#{ns}:#{c.name}\t#{text}"
    end
  end

  i += 1

  if i % 10000 == 0
    logger.info "#{i} records processed"
  end
end

logger.info "#{i} records processed"
logger.info 'Transformation finished'
